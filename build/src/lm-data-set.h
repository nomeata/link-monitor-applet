/* Generated by GOB (v2.0.15)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>


#include "lm-util.h"
#include "lm-decls.h"

#ifndef __LM_DATA_SET_H__
#define __LM_DATA_SET_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */



typedef struct
{
  LMTimeSpan	timestamp;
  /*
   * Save some space (usually 4 bytes) by not using a LMTimeSpan.
   *
   * Note that we lose nothing in the process: ridiculously high
   * roundtrip times (more than one hour) would be needed to lose
   * precision. And to be able to observe that loss of precision, a
   * ridiculously tall graph would be needed (a few million pixels or
   * so).
   *
   * A negative value means no reply.
   */
  float		roundtrip_time;
} LMDataPoint;


/*
 * Type checking and casting macros
 */
#define LM_TYPE_DATA_SET	(lm_data_set_get_type())
#define LM_DATA_SET(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), lm_data_set_get_type(), LMDataSet)
#define LM_DATA_SET_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), lm_data_set_get_type(), LMDataSet const)
#define LM_DATA_SET_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), lm_data_set_get_type(), LMDataSetClass)
#define LM_IS_DATA_SET(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), lm_data_set_get_type ())

#define LM_DATA_SET_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), lm_data_set_get_type(), LMDataSetClass)

/* Private structure type */
typedef struct _LMDataSetPrivate LMDataSetPrivate;

/*
 * Main object structure
 */
#ifndef __TYPEDEF_LM_DATA_SET__
#define __TYPEDEF_LM_DATA_SET__
typedef struct _LMDataSet LMDataSet;
#endif
struct _LMDataSet {
	GObject __parent__;
	/*< private >*/
	LMDataSetPrivate *_priv;
};

/*
 * Class definition
 */
typedef struct _LMDataSetClass LMDataSetClass;
struct _LMDataSetClass {
	GObjectClass __parent__;
};


/*
 * Public methods
 */
GType	lm_data_set_get_type	(void);
#line 438 "src/lm-data-set.gob"
void 	lm_data_set_add_live_data_point	(LMDataSet * self,
					LMTimeSpan roundtrip_time);
#line 81 "lm-data-set.h"
#line 444 "src/lm-data-set.gob"
void 	lm_data_set_add_dead_data_point	(LMDataSet * self);
#line 84 "lm-data-set.h"
#line 450 "src/lm-data-set.gob"
GArray * 	lm_data_set_get_display_data	(LMDataSet * self,
					LMTimeSpan now);
#line 88 "lm-data-set.h"
#line 468 "src/lm-data-set.gob"
void 	lm_data_set_clear_display_data	(LMDataSet * self);
#line 91 "lm-data-set.h"
#line 479 "src/lm-data-set.gob"
LMDataSet * 	lm_data_set_new	(LMApplet * applet);
#line 94 "lm-data-set.h"

/*
 * Argument wrapping macros
 */
#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
#define LM_DATA_SET_PROP_APPLET(arg)    	"applet", __extension__ ({gpointer z = (arg); z;})
#define LM_DATA_SET_GET_PROP_APPLET(arg)	"applet", __extension__ ({gpointer *z = (arg); z;})
#else /* __GNUC__ && !__STRICT_ANSI__ */
#define LM_DATA_SET_PROP_APPLET(arg)    	"applet",(gpointer )(arg)
#define LM_DATA_SET_GET_PROP_APPLET(arg)	"applet",(gpointer *)(arg)
#endif /* __GNUC__ && !__STRICT_ANSI__ */


#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
