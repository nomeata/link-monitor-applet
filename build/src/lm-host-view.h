/* Generated by GOB (v2.0.15)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>


#include <gtk/gtk.h>
#include "lm-applet.h"

#ifndef __LM_HOST_VIEW_H__
#define __LM_HOST_VIEW_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*
 * Type checking and casting macros
 */
#define LM_TYPE_HOST_VIEW	(lm_host_view_get_type())
#define LM_HOST_VIEW(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), lm_host_view_get_type(), LMHostView)
#define LM_HOST_VIEW_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), lm_host_view_get_type(), LMHostView const)
#define LM_HOST_VIEW_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), lm_host_view_get_type(), LMHostViewClass)
#define LM_IS_HOST_VIEW(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), lm_host_view_get_type ())

#define LM_HOST_VIEW_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), lm_host_view_get_type(), LMHostViewClass)

/* Private structure type */
typedef struct _LMHostViewPrivate LMHostViewPrivate;

/*
 * Main object structure
 */
#ifndef __TYPEDEF_LM_HOST_VIEW__
#define __TYPEDEF_LM_HOST_VIEW__
typedef struct _LMHostView LMHostView;
#endif
struct _LMHostView {
	GtkTreeView __parent__;
	/*< public >*/
	gboolean editing_host;
	gboolean can_go_up;
	gboolean can_go_down;
	/*< private >*/
	LMHostViewPrivate *_priv;
};

/*
 * Class definition
 */
typedef struct _LMHostViewClass LMHostViewClass;
struct _LMHostViewClass {
	GtkTreeViewClass __parent__;
	/*signal*/void (* activate_add) (LMHostView * self);
	/*signal*/void (* activate_move) (LMHostView * self, int direction);
	/*signal*/void (* activate_remove) (LMHostView * self);
	/*signal*/void (* activate_cut) (LMHostView * self);
	/*signal*/void (* activate_copy) (LMHostView * self);
	/*signal*/void (* activate_paste) (LMHostView * self);
};


/*
 * Public methods
 */
GType	lm_host_view_get_type	(void);
#line 68 "src/lm-host-view.gob"
gboolean 	lm_host_view_get_editing_host	(LMHostView * self);
#line 71 "lm-host-view.h"
#line 68 "src/lm-host-view.gob"
void 	lm_host_view_set_editing_host	(LMHostView * self,
					gboolean val);
#line 75 "lm-host-view.h"
#line 71 "src/lm-host-view.gob"
gboolean 	lm_host_view_get_can_go_up	(LMHostView * self);
#line 78 "lm-host-view.h"
#line 71 "src/lm-host-view.gob"
void 	lm_host_view_set_can_go_up	(LMHostView * self,
					gboolean val);
#line 82 "lm-host-view.h"
#line 74 "src/lm-host-view.gob"
gboolean 	lm_host_view_get_can_go_down	(LMHostView * self);
#line 85 "lm-host-view.h"
#line 74 "src/lm-host-view.gob"
void 	lm_host_view_set_can_go_down	(LMHostView * self,
					gboolean val);
#line 89 "lm-host-view.h"
#line 268 "src/lm-host-view.gob"
void 	lm_host_view_activate_add	(LMHostView * self);
#line 92 "lm-host-view.h"
#line 288 "src/lm-host-view.gob"
void 	lm_host_view_activate_move	(LMHostView * self,
					int direction);
#line 96 "lm-host-view.h"
#line 343 "src/lm-host-view.gob"
void 	lm_host_view_activate_remove	(LMHostView * self);
#line 99 "lm-host-view.h"
#line 967 "src/lm-host-view.gob"
GtkWidget * 	lm_host_view_new	(LMApplet * applet);
#line 102 "lm-host-view.h"

/*
 * Signal connection wrapper macros
 */
#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
#define lm_host_view_connect__activate_add(object,func,data)	g_signal_connect(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_add",(GCallback) __extension__ ({void (* ___activate_add) (LMHostView * ___fake___self, gpointer ___data ) = (func); ___activate_add; }), (data))
#define lm_host_view_connect_after__activate_add(object,func,data)	g_signal_connect_after(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_add",(GCallback) __extension__ ({void (* ___activate_add) (LMHostView * ___fake___self, gpointer ___data ) = (func); ___activate_add; }), (data))
#define lm_host_view_connect_data__activate_add(object,func,data,destroy_data,flags)	g_signal_connect_data(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_add",(GCallback) __extension__ ({void (* ___activate_add) (LMHostView * ___fake___self, gpointer ___data ) = (func); ___activate_add; }), (data), (destroy_data), (GConnectFlags)(flags))
#define lm_host_view_connect__activate_move(object,func,data)	g_signal_connect(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_move",(GCallback) __extension__ ({void (* ___activate_move) (LMHostView * ___fake___self, int ___fake___direction, gpointer ___data ) = (func); ___activate_move; }), (data))
#define lm_host_view_connect_after__activate_move(object,func,data)	g_signal_connect_after(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_move",(GCallback) __extension__ ({void (* ___activate_move) (LMHostView * ___fake___self, int ___fake___direction, gpointer ___data ) = (func); ___activate_move; }), (data))
#define lm_host_view_connect_data__activate_move(object,func,data,destroy_data,flags)	g_signal_connect_data(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_move",(GCallback) __extension__ ({void (* ___activate_move) (LMHostView * ___fake___self, int ___fake___direction, gpointer ___data ) = (func); ___activate_move; }), (data), (destroy_data), (GConnectFlags)(flags))
#define lm_host_view_connect__activate_remove(object,func,data)	g_signal_connect(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_remove",(GCallback) __extension__ ({void (* ___activate_remove) (LMHostView * ___fake___self, gpointer ___data ) = (func); ___activate_remove; }), (data))
#define lm_host_view_connect_after__activate_remove(object,func,data)	g_signal_connect_after(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_remove",(GCallback) __extension__ ({void (* ___activate_remove) (LMHostView * ___fake___self, gpointer ___data ) = (func); ___activate_remove; }), (data))
#define lm_host_view_connect_data__activate_remove(object,func,data,destroy_data,flags)	g_signal_connect_data(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_remove",(GCallback) __extension__ ({void (* ___activate_remove) (LMHostView * ___fake___self, gpointer ___data ) = (func); ___activate_remove; }), (data), (destroy_data), (GConnectFlags)(flags))
#define lm_host_view_connect__activate_cut(object,func,data)	g_signal_connect(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_cut",(GCallback) __extension__ ({void (* ___activate_cut) (LMHostView * ___fake___self, gpointer ___data ) = (func); ___activate_cut; }), (data))
#define lm_host_view_connect_after__activate_cut(object,func,data)	g_signal_connect_after(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_cut",(GCallback) __extension__ ({void (* ___activate_cut) (LMHostView * ___fake___self, gpointer ___data ) = (func); ___activate_cut; }), (data))
#define lm_host_view_connect_data__activate_cut(object,func,data,destroy_data,flags)	g_signal_connect_data(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_cut",(GCallback) __extension__ ({void (* ___activate_cut) (LMHostView * ___fake___self, gpointer ___data ) = (func); ___activate_cut; }), (data), (destroy_data), (GConnectFlags)(flags))
#define lm_host_view_connect__activate_copy(object,func,data)	g_signal_connect(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_copy",(GCallback) __extension__ ({void (* ___activate_copy) (LMHostView * ___fake___self, gpointer ___data ) = (func); ___activate_copy; }), (data))
#define lm_host_view_connect_after__activate_copy(object,func,data)	g_signal_connect_after(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_copy",(GCallback) __extension__ ({void (* ___activate_copy) (LMHostView * ___fake___self, gpointer ___data ) = (func); ___activate_copy; }), (data))
#define lm_host_view_connect_data__activate_copy(object,func,data,destroy_data,flags)	g_signal_connect_data(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_copy",(GCallback) __extension__ ({void (* ___activate_copy) (LMHostView * ___fake___self, gpointer ___data ) = (func); ___activate_copy; }), (data), (destroy_data), (GConnectFlags)(flags))
#define lm_host_view_connect__activate_paste(object,func,data)	g_signal_connect(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_paste",(GCallback) __extension__ ({void (* ___activate_paste) (LMHostView * ___fake___self, gpointer ___data ) = (func); ___activate_paste; }), (data))
#define lm_host_view_connect_after__activate_paste(object,func,data)	g_signal_connect_after(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_paste",(GCallback) __extension__ ({void (* ___activate_paste) (LMHostView * ___fake___self, gpointer ___data ) = (func); ___activate_paste; }), (data))
#define lm_host_view_connect_data__activate_paste(object,func,data,destroy_data,flags)	g_signal_connect_data(LM_HOST_VIEW(__extension__ ({LMHostView *___object = (object); ___object; })),"activate_paste",(GCallback) __extension__ ({void (* ___activate_paste) (LMHostView * ___fake___self, gpointer ___data ) = (func); ___activate_paste; }), (data), (destroy_data), (GConnectFlags)(flags))
#else /* __GNUC__ && !__STRICT_ANSI__ */
#define lm_host_view_connect__activate_add(object,func,data)	g_signal_connect(LM_HOST_VIEW(object),"activate_add",(GCallback)(func),(data))
#define lm_host_view_connect_after__activate_add(object,func,data)	g_signal_connect_after(LM_HOST_VIEW(object),"activate_add",(GCallback)(func),(data))
#define lm_host_view_connect_data__activate_add(object,func,data,destroy_data,flags)	g_signal_connect_data(LM_HOST_VIEW(object),"activate_add",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#define lm_host_view_connect__activate_move(object,func,data)	g_signal_connect(LM_HOST_VIEW(object),"activate_move",(GCallback)(func),(data))
#define lm_host_view_connect_after__activate_move(object,func,data)	g_signal_connect_after(LM_HOST_VIEW(object),"activate_move",(GCallback)(func),(data))
#define lm_host_view_connect_data__activate_move(object,func,data,destroy_data,flags)	g_signal_connect_data(LM_HOST_VIEW(object),"activate_move",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#define lm_host_view_connect__activate_remove(object,func,data)	g_signal_connect(LM_HOST_VIEW(object),"activate_remove",(GCallback)(func),(data))
#define lm_host_view_connect_after__activate_remove(object,func,data)	g_signal_connect_after(LM_HOST_VIEW(object),"activate_remove",(GCallback)(func),(data))
#define lm_host_view_connect_data__activate_remove(object,func,data,destroy_data,flags)	g_signal_connect_data(LM_HOST_VIEW(object),"activate_remove",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#define lm_host_view_connect__activate_cut(object,func,data)	g_signal_connect(LM_HOST_VIEW(object),"activate_cut",(GCallback)(func),(data))
#define lm_host_view_connect_after__activate_cut(object,func,data)	g_signal_connect_after(LM_HOST_VIEW(object),"activate_cut",(GCallback)(func),(data))
#define lm_host_view_connect_data__activate_cut(object,func,data,destroy_data,flags)	g_signal_connect_data(LM_HOST_VIEW(object),"activate_cut",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#define lm_host_view_connect__activate_copy(object,func,data)	g_signal_connect(LM_HOST_VIEW(object),"activate_copy",(GCallback)(func),(data))
#define lm_host_view_connect_after__activate_copy(object,func,data)	g_signal_connect_after(LM_HOST_VIEW(object),"activate_copy",(GCallback)(func),(data))
#define lm_host_view_connect_data__activate_copy(object,func,data,destroy_data,flags)	g_signal_connect_data(LM_HOST_VIEW(object),"activate_copy",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#define lm_host_view_connect__activate_paste(object,func,data)	g_signal_connect(LM_HOST_VIEW(object),"activate_paste",(GCallback)(func),(data))
#define lm_host_view_connect_after__activate_paste(object,func,data)	g_signal_connect_after(LM_HOST_VIEW(object),"activate_paste",(GCallback)(func),(data))
#define lm_host_view_connect_data__activate_paste(object,func,data,destroy_data,flags)	g_signal_connect_data(LM_HOST_VIEW(object),"activate_paste",(GCallback)(func),(data),(destroy_data),(GConnectFlags)(flags))
#endif /* __GNUC__ && !__STRICT_ANSI__ */


/*
 * Argument wrapping macros
 */
#if defined(__GNUC__) && !defined(__STRICT_ANSI__)
#define LM_HOST_VIEW_PROP_APPLET(arg)    	"applet", __extension__ ({gpointer z = (arg); z;})
#define LM_HOST_VIEW_GET_PROP_APPLET(arg)	"applet", __extension__ ({gpointer *z = (arg); z;})
#define LM_HOST_VIEW_PROP_EDITING_HOST(arg)    	"editing_host", __extension__ ({gboolean z = (arg); z;})
#define LM_HOST_VIEW_GET_PROP_EDITING_HOST(arg)	"editing_host", __extension__ ({gboolean *z = (arg); z;})
#define LM_HOST_VIEW_PROP_CAN_GO_UP(arg)    	"can_go_up", __extension__ ({gboolean z = (arg); z;})
#define LM_HOST_VIEW_GET_PROP_CAN_GO_UP(arg)	"can_go_up", __extension__ ({gboolean *z = (arg); z;})
#define LM_HOST_VIEW_PROP_CAN_GO_DOWN(arg)    	"can_go_down", __extension__ ({gboolean z = (arg); z;})
#define LM_HOST_VIEW_GET_PROP_CAN_GO_DOWN(arg)	"can_go_down", __extension__ ({gboolean *z = (arg); z;})
#else /* __GNUC__ && !__STRICT_ANSI__ */
#define LM_HOST_VIEW_PROP_APPLET(arg)    	"applet",(gpointer )(arg)
#define LM_HOST_VIEW_GET_PROP_APPLET(arg)	"applet",(gpointer *)(arg)
#define LM_HOST_VIEW_PROP_EDITING_HOST(arg)    	"editing_host",(gboolean )(arg)
#define LM_HOST_VIEW_GET_PROP_EDITING_HOST(arg)	"editing_host",(gboolean *)(arg)
#define LM_HOST_VIEW_PROP_CAN_GO_UP(arg)    	"can_go_up",(gboolean )(arg)
#define LM_HOST_VIEW_GET_PROP_CAN_GO_UP(arg)	"can_go_up",(gboolean *)(arg)
#define LM_HOST_VIEW_PROP_CAN_GO_DOWN(arg)    	"can_go_down",(gboolean )(arg)
#define LM_HOST_VIEW_GET_PROP_CAN_GO_DOWN(arg)	"can_go_down",(gboolean *)(arg)
#endif /* __GNUC__ && !__STRICT_ANSI__ */


#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
