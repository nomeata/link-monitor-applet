/* Generated by GOB (v2.0.15)   (do not edit directly) */

#include <glib.h>
#include <glib-object.h>


#include <gtk/gtk.h>

#ifndef __LM_TOOLTIPS_H__
#define __LM_TOOLTIPS_H__

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/*
 * Type checking and casting macros
 */
#define LM_TYPE_TOOLTIPS	(lm_tooltips_get_type())
#define LM_TOOLTIPS(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), lm_tooltips_get_type(), LMTooltips)
#define LM_TOOLTIPS_CONST(obj)	G_TYPE_CHECK_INSTANCE_CAST((obj), lm_tooltips_get_type(), LMTooltips const)
#define LM_TOOLTIPS_CLASS(klass)	G_TYPE_CHECK_CLASS_CAST((klass), lm_tooltips_get_type(), LMTooltipsClass)
#define LM_IS_TOOLTIPS(obj)	G_TYPE_CHECK_INSTANCE_TYPE((obj), lm_tooltips_get_type ())

#define LM_TOOLTIPS_GET_CLASS(obj)	G_TYPE_INSTANCE_GET_CLASS((obj), lm_tooltips_get_type(), LMTooltipsClass)

/* Private structure type */
typedef struct _LMTooltipsPrivate LMTooltipsPrivate;

/*
 * Main object structure
 */
#ifndef __TYPEDEF_LM_TOOLTIPS__
#define __TYPEDEF_LM_TOOLTIPS__
typedef struct _LMTooltips LMTooltips;
#endif
struct _LMTooltips {
	GObject __parent__;
	/*< private >*/
	LMTooltipsPrivate *_priv;
};

/*
 * Class definition
 */
typedef struct _LMTooltipsClass LMTooltipsClass;
struct _LMTooltipsClass {
	GObjectClass __parent__;
};


/*
 * Public methods
 */
GType	lm_tooltips_get_type	(void);
#line 261 "src/lm-tooltips.gob"
void 	lm_tooltips_set_tip	(LMTooltips * self,
					GtkWidget * widget,
					const char * tip_text);
#line 62 "lm-tooltips.h"
#line 279 "src/lm-tooltips.gob"
void 	lm_tooltips_set_tip_widget	(LMTooltips * self,
					GtkWidget * widget,
					GtkWidget * tip_widget);
#line 67 "lm-tooltips.h"
#line 656 "src/lm-tooltips.gob"
void 	lm_tooltips_toggle_keyboard_mode	(GtkWidget * widget);
#line 70 "lm-tooltips.h"
#line 665 "src/lm-tooltips.gob"
LMTooltips * 	lm_tooltips_new	(void);
#line 73 "lm-tooltips.h"

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif
